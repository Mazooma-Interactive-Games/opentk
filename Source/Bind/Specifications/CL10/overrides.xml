<?xml version="1.0" encoding="utf-8" ?>
<signatures version="2">
  <add name="cl" version="1.0">
    <enum name="CommandQueueFlags" type="long">
      <token name="DEFAULT" value="0" />
    </enum>
  </add>

  <add name="cl" version="1.1">
    <enum name="BufferCreateType">
      <token name="BUFFER_CREATE_TYPE_REGION" value="0x1220" />
    </enum>
    <enum name="ChannelOrder">
      <token name="Rx" value="0x10BA" />
      <token name="RGx" value="0x10BB" />
      <token name="RGBx" value="0x10BC" />
    </enum>
    <enum name="ContextInfo">
      <token name="CONTEXT_NUM_DEVICES" value="0x1083" />
    </enum>
    <enum name="KernelWorkGroupInfo">
      <token name="KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE" value="0x11B3" />
    </enum>
    <function name="CreateSubBuffer">
      <param type="cl_mem" name="buffer" flow="in" />
      <param type="cl_mem_flags" name="flags" flow="in" />
      <param type="cl_buffer_create_type" name="buffer_create_type" flow="in" />
      <param type="void*" name="buffer_create_info" flow="in" />
      <param type="cl_int*" name="errcode_ret" flow="out" />
      <returns type="cl_mem" />
    </function>
    <function name="CreateUserEvent">
      <param type="cl_context" name="context" flow="in" />
      <param type="cl_int*" name="errcode_ret" flow="out" />
      <returns type="cl_event" />
    </function>
    <enum name="DeviceInfo">
      <token name="DEVICE_HOST_UNIFIED_MEMORY" value="0x1035" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_CHAR" value="0x1036" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_SHORT" value="0x1037" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_INT" value="0x1038" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_LONG" value="0x1039" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_FLOAT" value="0x103A" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE" value="0x103B" />
      <token name="DEVICE_NATIVE_VECTOR_WIDTH_HALF" value="0x103C" />
      <token name="DEVICE_OPENCL_C_VERSION" value="0x103D" />
    </enum>
    <function name="EnqueueReadBufferRect">
      <param type="cl_command_queue" name="command_queue" flow="in" />
      <param type="cl_mem" name="buffer" flow="in" />
      <param type="cl_bool" name="blocking_read" flow="in" />
      <param type="size_t*" name="buffer_offset" flow="in" count="3" />
      <param type="size_t*" name="host_offset" flow="in" count="3" />
      <param type="size_t*" name="region" flow="in" count="3" />
      <param type="size_t" name="buffer_row_pitch" flow="in" />
      <param type="size_t" name="buffer_slice_pitch" flow="in" />
      <param type="size_t" name="host_row_pitch" flow="in" />
      <param type="size_t" name="host_slice_pitch" flow="in" />
      <param type="void*" name="ptr" flow="in" />
      <param type="cl_uint" name="num_events_in_wait_list" flow="in" />
      <param type="cl_event*" name="event_wait_list" flow="in" />
      <param type="cl_event*" name="event" flow="out" count="1" />
      <returns type="cl_int" />
    </function>
    <function name="EnqueueWriteBufferRect">
      <param type="cl_command_queue" name="command_queue" flow="in" />
      <param type="cl_mem" name="buffer" flow="in" />
      <param type="cl_bool" name="blocking_write" flow="in" />
      <param type="size_t*" name="buffer_offset" flow="in" count="3" />
      <param type="size_t*" name="host_offset" flow="in" count="3" />
      <param type="size_t*" name="region" flow="in" count="3" />
      <param type="size_t" name="buffer_row_pitch" flow="in" />
      <param type="size_t" name="buffer_slice_pitch" flow="in" />
      <param type="size_t" name="host_row_pitch" flow="in" />
      <param type="size_t" name="host_slice_pitch" flow="in" />
      <param type="void*" name="ptr" flow="in" />
      <param type="cl_uint" name="num_events_in_wait_list" flow="in" />
      <param type="cl_event*" name="event_wait_list" flow="in" />
      <param type="cl_event*" name="event" flow="out" />
      <returns type="cl_int" />
    </function>
    <function name="EnqueueCopyBufferRect">
      <param type="cl_command_queue" name="command_queue" flow="in" />
      <param type="cl_mem" name="src_buffer" flow="in" />
      <param type="cl_mem" name="dst_buffer" flow="in" />
      <param type="size_t*" name="src_origin" flow="in" count="3" />
      <param type="size_t*" name="dst_origin" flow="in" count="3" />
      <param type="size_t*" name="region" flow="in" count="3" />
      <param type="size_t" name="src_row_pitch" flow="in" />
      <param type="size_t" name="src_slice_pitch" flow="in" />
      <param type="size_t" name="dst_row_pitch" flow="in" />
      <param type="size_t" name="dst_slice_pitch" flow="in" />
      <param type="cl_uint" name="num_events_in_wait_list" flow="in" />
      <param type="cl_event*" name="event_wait_list" flow="in" />
      <param type="cl_event*" name="event" flow="out" />
      <returns type="cl_int" />
    </function>
    <function name="SetMemObjectDestructorCallback">
      <param type="cl_mem" name="memobj" flow="in" />
      <param type="MemObjectNotifyDelegate" name="pfn_notify" flow="in" />
      <param type="void*" name="user_data" flow="in" />
      <returns type="ErrorCodes" />
    </function>
    <function name="SetUserEventStatus">
      <param type="cl_event" name="event" flow="in" />
      <param type="cl_int" name="execution_status" flow="in" />
      <returns type="cl_int" />
    </function>
  </add>

  <delete name="cl" version="1.1">
    <function name="SetCommandQueueProperty" />
  </delete>

  <add name="cl" version="1.2">
    <enum name="ChannelOrder">
      <token name="DEPTH" value="0x10BD" />
      <token name="DEPTH_STENCIL" value="0x10BE" />
    </enum>

    <function name="LinkProgram" version="1.2">
      <param type="cl_context" name="context" flow="in" />
      <param type="cl_uint" name="num_devices" flow="in" />
      <param type="cl_device_id*" name="device_list" flow="in" />
      <param type="char*" name="options" flow="in" />
      <param type="cl_uint" name="num_input_programs" flow="in" />
      <param type="cl_program*" name="input_programs" flow="in" />
      <param type="ProgramNotifyDelegate" name="notify" flow="in" />
      <param type="IntPtr" name="user_data" flow="in" />
      <returns type="ErrorCodes" />
    </function>
    <function name="SetEventCallback" version="1.2">
      <param type="cl_event" name="event" flow="in" />
      <param type="cl_int" name="command_exec_callback_type" flow="in" />
      <param type="EventNotifyDelegate" name="notify" flow="in" />
      <param type="IntPtr" name="user_data" flow="in" />
      <returns type="ErrorCodes" />
    </function>
  </add>

  <add name="cl" version="2.0">
    <enum name="BufferCreateType">
      <token name="BUFFER_CREATE_TYPE_REGION" value="0x1220" />
    </enum>
    <enum name="SamplerInfo">
      <token name="SAMPLER_REFERENCE_COUNT" value="0x1150" />
      <token name="SAMPLER_CONTEXT" value="0x1151" />
      <token name="SAMPLER_NORMALIZED_COORDS" value="0x1152" />
      <token name="SAMPLER_enumRESSING_MODE" value="0x1153" />
      <token name="SAMPLER_FILTER_MODE" value="0x1154" />
      <token name="SAMPLER_MIP_FILTER_MODE" value="0x1155" />
      <token name="SAMPLER_LOD_MIN" value="0x1156" />
      <token name="SAMPLER_LOD_MAX" value="0x1157" />
    </enum>
    <enum name="SamplerProperties">
      <use token="SAMPLER_NORMALIZED_COORDS" comment="&lt;see cref='System.Boolean'&gt;; default true" />
      <use token="SAMPLER_ADDRESSING_MODE" comment="&lt;see cref='AddressingMode'&gt;; default Clamp" />
      <use token="SAMPLER_FILTER_MODE" comment="&lt;see cref='FilterMode'&gt;; default LinearNearest" />
      <use token="SAMPLER_MIP_FILTER_MODE" comment="Requires CL_KHR_mipmap_image. &lt;see cref='FilterMode'&gt;; default None" />
      <use token="SAMPLER_LOD_MIN" comment="Requires CL_KHR_mipmap_image. &lt;see cref='System.Single'&gt;; default 0.0" />
      <use token="SAMPLER_LOD_MAX" comment="Requires CL_KHR_mipmap_image. &lt;see cref='System.Single'&gt;; default 0.0" />
    </enum>
    <enum name="SvmMemFlags" type="long">
      <token name="MEM_READ_WRITE" value="(1 &lt;&lt; 0)" />
      <token name="MEM_WRITE_ONLY" value="(1 &lt;&lt; 1)" />
      <token name="MEM_READ_ONLY" value="(1 &lt;&lt; 2)" />
      <token name="MEM_USE_HOST_PTR" value="(1 &lt;&lt; 3)" />
      <token name="MEM_ALLOC_HOST_PTR" value="(1 &lt;&lt; 4)" />
      <token name="MEM_COPY_HOST_PTR" value="(1 &lt;&lt; 5)" />
      <token name="MEM_HOST_WRITE_ONLY" value="(1 &lt;&lt; 7)" />
      <token name="MEM_HOST_READ_ONLY" value="(1 &lt;&lt; 8)" />
      <token name="MEM_HOST_NO_ACCESS" value="(1 &lt;&lt; 9)" />
      <token name="MEM_HOST_NO_ACCESS" value="(1 &lt;&lt; 9)" />
      <token name="MEM_SVM_FINE_GRAIN_BUFFER" value="(1 &lt;&lt; 10)" />
      <token name="MEM_SVM_ATOMICS" value="(1 &lt;&lt; 11)" />
    </enum>

    <function name="EnqueueSVMFree" version="2.0">
      <param type="cl_command_queue" name="command_queue" flow="in" />
      <param type="cl_uint" name="num_svm_pointers" flow="in" />
      <param type="void**" name="svm_pointers" flow="in" />
      <param type="SvmFreeDelegate" name="free" flow="in" />
      <param type="IntPtr" name="user_data" flow="in" />
      <param type="cl_uint" name="num_events_in_wait_list" flow="in" />
      <param type="cl_event*" name="event_wait_list" flow="in" />
      <param type="cl_event*" name="event" flow="out" />
      <returns type="ErrorCodes" />
    </function>
    <function name="SVMAlloc" version="2.0">
      <param type="cl_context" name="context" flow="in" />
      <param type="cl_uint" name="alignment" flow="in" />
      <param type="cl_svm_mem_flags" name="flags" flow="in" />
      <param type="size_t" name="size" flow="in" />
      <returns type="void*" />
    </function>
    <function name="SVMFree" version="2.0">
      <param type="cl_context" name="context" flow="in" />
      <param type="void*" name="svm_pointer" flow="in" />
      <returns type="void" />
    </function>
  </add>

  <replace name="cl" version="1.0|1.1|1.2|2.0">
    <enum name="ErrorCodes"><name>ErrorCode</name></enum>
    <enum name="DeviceTypeFlags">
      <type>long</type>
    </enum>
    <enum name="CommandQueuePropertiesFlags">
      <name>CommandQueueFlags</name>
      <type>long</type>
    </enum>
    <enum name="CommandQueueProperties">
      <name>CommandQueueFlags</name>
      <type>long</type>
    </enum>

    <function name="BuildProgram">
      <param name="pfn_notify"><type>ProgramNotifyDelegate</type></param>
      <param name="user_data">
        <type>intptr_t</type>
        <pointer>0</pointer>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="CreateBuffer">
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateCommandQueue">
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateContext">
      <param name="properties"><type>IntPtr</type></param>
      <param name="pfn_notify"><type>ContextNotifyDelegate</type></param>
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
      <param name="user_data">
        <type>intptr_t</type>
        <pointer>0</pointer>
      </param>
    </function>
    <function name="CreateContextFromType">
      <param name="properties"><type>IntPtr</type></param>
      <param name="pfn_notify"><type>ContextNotifyDelegate</type></param>
      <param name="user_data">
        <type>intptr_t</type>
        <pointer>0</pointer>
      </param>
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateKernel">
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateProgramWithBinary">
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateProgramWithSource">
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateContextFromType">
      <param type="pfn_notify"><type>ContextNotifyDelegate</type></param>
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="CreateSampler">
      <param name="errcode_ret">
        <type>ErrorCodes</type>
        <count>1</count>
        <flow>out</flow>
      </param>
    </function>
    <function name="EnqueueNativeKernel">
      <param name="pfn_notify"><type>UserNotifyDelegate</type></param>
      <returns>ErrorCodes</returns>
      <param name="user_data">
        <type>intptr_t</type>
        <pointer>0</pointer>
      </param>
    </function>
    <function name="GetContextInfo">
      <param name="param_value_size_ret">
        <count>1</count>
        <flow>out</flow>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="GetDeviceInfo">
      <param name="param_value_size_ret">
        <count>1</count>
        <flow>out</flow>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="GetPlatformIDs">
      <param name="num_platforms">
        <count>1</count>
        <flow>out</flow>
      </param>
      <returns>ErrorCodes</returns>
    </function>

    <function name="GetPlatformIDs"><returns>ErrorCodes</returns></function>
    <function name="GetPlatformInfo"><returns>ErrorCodes</returns></function>
    <function name="GetDeviceIDs">
      <param name="num_devices"><count>1</count><flow>out</flow></param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="GetDeviceInfo">
      <param name="param_value_size_ret"><count>1</count><flow>out</flow></param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="CreateSubDevices"><returns>ErrorCodes</returns></function>
    <function name="RetainDevice"><returns>ErrorCodes</returns></function>
    <function name="ReleaseDevice"><returns>ErrorCodes</returns></function>
    <function name="RetainContext"><returns>ErrorCodes</returns></function>
    <function name="ReleaseContext"><returns>ErrorCodes</returns></function>
    <function name="GetContextInfo"><returns>ErrorCodes</returns></function>
    <function name="RetainCommandQueue"><returns>ErrorCodes</returns></function>
    <function name="ReleaseCommandQueue"><returns>ErrorCodes</returns></function>
    <function name="GetCommandQueueInfo"><returns>ErrorCodes</returns></function>
    <function name="RetainMemObject"><returns>ErrorCodes</returns></function>
    <function name="ReleaseMemObject"><returns>ErrorCodes</returns></function>
    <function name="GetSupportedImageFormats"><returns>ErrorCodes</returns></function>
    <function name="GetMemObjectInfo"><returns>ErrorCodes</returns></function>
    <function name="GetImageInfo"><returns>ErrorCodes</returns></function>
    <function name="GetPipeInfo"><returns>ErrorCodes</returns></function>
    <function name="RetainSampler"><returns>ErrorCodes</returns></function>
    <function name="ReleaseSampler"><returns>ErrorCodes</returns></function>
    <function name="GetSamplerInfo"><returns>ErrorCodes</returns></function>
    <function name="RetainProgram"><returns>ErrorCodes</returns></function>
    <function name="ReleaseProgram"><returns>ErrorCodes</returns></function>
    <function name="CompileProgram"><returns>ErrorCodes</returns></function>
    <function name="UnloadPlatformCompiler"><returns>ErrorCodes</returns></function>
    <function name="GetProgramInfo"><returns>ErrorCodes</returns></function>
    <function name="GetProgramBuildInfo"><returns>ErrorCodes</returns></function>
    <function name="CreateKernelsInProgram"><returns>ErrorCodes</returns></function>
    <function name="RetainKernel"><returns>ErrorCodes</returns></function>
    <function name="ReleaseKernel"><returns>ErrorCodes</returns></function>
    <function name="SetKernelArg">
      <param name="arg_value"><count>1</count></param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="SetKernelsArgSVMPointer"><returns>ErrorCodes</returns></function>
    <function name="SetKernelExecInfo"><returns>ErrorCodes</returns></function>
    <function name="GetKernelInfo"><returns>ErrorCodes</returns></function>
    <function name="GetKernelArgInfo"><returns>ErrorCodes</returns></function>
    <function name="GetKernelWorkGroupInfo"><returns>ErrorCodes</returns></function>
    <function name="WaitForEvents"><returns>ErrorCodes</returns></function>
    <function name="GetEventInfo"><returns>ErrorCodes</returns></function>
    <function name="ReleaseEvent"><returns>ErrorCodes</returns></function>
    <function name="SetUserEventStatus"><returns>ErrorCodes</returns></function>
    <function name="SetEventCallback"><returns>ErrorCodes</returns></function>
    <function name="GetEventProfilingInfo"><returns>ErrorCodes</returns></function>
    <function name="Flush"><returns>ErrorCodes</returns></function>
    <function name="Finish"><returns>ErrorCodes</returns></function>
    <function name="EnqueueReadBuffer">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueReadBufferRect">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueWriteBuffer">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueWriteBufferRect">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueFillBuffer">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueCopyBuffer">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueCopyBufferRect">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueReadImage">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueWriteImage">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueFillImage">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueCopyImage">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueCopyImageToBuffer">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueCopyBufferToImage">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueUnmapMemObject">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueMigrateMemObjects">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueNDRangeKernel">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueNativeKernel">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueMarkerWithWaitList">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueBarrierWithWaitList">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueSVMFree">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueSVMMemcpy">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueSVMMemFill">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueSVMMap">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
    <function name="EnqueueSVMUnmap">
      <param name="event">
        <flow>out</flow>
        <count>1</count>
      </param>
      <returns>ErrorCodes</returns>
    </function>
  </replace>

  <classes name="cl">
    <add name="ComputeContext">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="CreateContext" static="true" />
      <function name="CreateContextFromType" static="true" />
      <function name="CreateBuffer" />
      <function name="CreateCommandQueue" />
      <function name="CreateImage" />
      <function name="CreateImage2D" />
      <function name="CreateImage3D" />
      <function name="CreateProgramWithBinary" />
      <function name="CreateProgramWithBuiltInKernels" />
      <function name="CreateProgramWithSource" />
      <function name="CreateSampler" />
      <function name="CreateUserEvent" />
      <function name="RetainContext" />
      <function name="ReleaseContext" />
      <function name="GetContextInfo" />
      <function name="GetDeviceInfo" />
      <function name="GetSupportedImageFormats" />
      <function name="LinkProgram" />
      <function name="SetMemObjectDestructorCallback" />
      <function name="CreateCommandQueueWithProperties" version="2.0" />
      <function name="CreatePipe" version="2.0" />
      <function name="SVMAlloc" version="2.0" />
      <function name="SVMFree" version="2.0" />
      <function name="CreateSamplerWithProperties" version="2.0" />
    </add>
    <add name="ComputeDevice">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="GetDeviceIDs" />
    </add>
    <add name="ComputeEvent">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="SetUserEventStatus" />
    </add>
    <add name="ComputeKernel">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="GetKernelInfo" />
      <function name="GetKernelWorkGroupInfo" />
      <function name="ReleaseKernel" />
      <function name="RetainKernel" />
      <function name="SetKernelArg" />
    </add>
    <add name="ComputeMemory">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="ReleaseMemObject" />
    </add>
    <add name="ComputePlatform">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="GetPlatformIDs" static="true" />
    </add>
    <add name="ComputeProgram">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="BuildProgram" />
      <function name="CreateKernel" />
      <function name="ReleaseProgram" />
      <function name="RetainProgram" />
    </add>
    <add name="CommandQueue">
      <field name="Value" type="IntPtr" visibility="internal" />
      <function name="EnqueueCopyBuffer" />
      <function name="EnqueueReadBuffer" />
      <function name="EnqueueNDRangeKernel" />
      <function name="EnqueueWriteBuffer" />
      <function name="Finish" />
    </add>
    <add name="ComputeSampler">
      <field name="Value" type="IntPtr" visibility="internal" />
    </add>
    <add name="ContextProperty">
      <field name="Property" type="IntPtr" />
      <field name="Value" type="IntPtr" />
    </add>
  </classes>

</signatures>